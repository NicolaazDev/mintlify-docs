{
  "openapi": "3.0.0",
  "paths": {
    "/user": {
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "summary": "Criar um novo usuário",
        "tags": [
          "Usuários"
        ]
      },
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de usuários.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "summary": "Listar todos os usuários",
        "tags": [
          "Usuários"
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Usuário ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "summary": "Buscar um usuário por ID",
        "tags": [
          "Usuários"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Usuário ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Usuário deletado com sucesso."
          }
        },
        "summary": "Deletar um usuário por ID",
        "tags": [
          "Usuários"
        ]
      }
    },
    "/user/avatar": {
      "post": {
        "operationId": "UsersController_updateAvatar",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Atualizar avatar do usuário",
        "tags": [
          "Usuários"
        ]
      }
    },
    "/user/banner": {
      "post": {
        "operationId": "UsersController_updateBanner",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Atualizar banner do usuário",
        "tags": [
          "Usuários"
        ]
      }
    },
    "/user/profile": {
      "put": {
        "operationId": "UsersController_updateProfile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Atualizar perfil do usuário",
        "tags": [
          "Usuários"
        ]
      }
    },
    "/user/{id}/unban": {
      "patch": {
        "operationId": "UsersController_unbanUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do usuário a ser desbanido",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário desbanido com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "summary": "Desbanir um usuário por ID",
        "tags": [
          "Usuários"
        ]
      }
    },
    "/user/{id}/ban": {
      "patch": {
        "operationId": "UsersController_banUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do usuário a ser banido",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário banido com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "summary": "Banir um usuário por ID",
        "tags": [
          "Usuários"
        ]
      }
    },
    "/user/{userId}/presence": {
      "get": {
        "description": "Retorna o status online/offline e quando foi visto pela última vez",
        "operationId": "UsersController_getPresence",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status de presença do usuário",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isOnline": {
                      "type": "boolean"
                    },
                    "lastSeenAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Obter status de presença",
        "tags": [
          "Usuários"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "description": "Registrar um novo usuário, gerando um token de acesso.",
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário registrado com sucesso."
          }
        },
        "summary": "Registrar um novo usuário",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/verify-otp": {
      "post": {
        "description": "Valida o código OTP enviado por email após o registro para ativar a conta do usuário.",
        "operationId": "AuthController_verifyOtp",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verificado com sucesso."
          }
        },
        "summary": "Verificar OTP",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/request-reset-password": {
      "post": {
        "description": "Envia um código de verificação por email para redefinir a senha. O código é válido por 15 minutos.",
        "operationId": "AuthController_requestResetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Email do usuário que deseja redefinir a senha",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Código de redefinição enviado com sucesso para o email cadastrado."
          },
          "404": {
            "description": "Email não encontrado no sistema."
          }
        },
        "summary": "Solicitar redefinição de senha",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/verify-reset-code": {
      "post": {
        "description": "Valida se o código enviado por email para redefinição de senha está correto e ainda é válido.",
        "operationId": "AuthController_verifyResetCode",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Email e código de verificação recebido",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyResetCodeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Código verificado com sucesso. O usuário pode prosseguir com a redefinição de senha."
          },
          "401": {
            "description": "Código inválido ou expirado. Solicite um novo código."
          },
          "404": {
            "description": "Email não encontrado no sistema."
          }
        },
        "summary": "Verificar código de redefinição",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/reset-password": {
      "post": {
        "description": "Define uma nova senha para o usuário após validação do código de redefinição. A senha deve conter pelo menos 8 caracteres, incluindo letras maiúsculas, minúsculas, números e caracteres especiais.",
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados necessários para redefinição de senha",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Senha redefinida com sucesso. O usuário já pode fazer login com a nova senha."
          },
          "400": {
            "description": "Nova senha não atende aos requisitos mínimos de segurança."
          },
          "401": {
            "description": "Solicitação inválida. Verifique se o código foi validado primeiro."
          },
          "404": {
            "description": "Email não encontrado no sistema."
          }
        },
        "summary": "Redefinir senha",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "description": "Autentica o usuário com e-mail e senha. Se 2FA estiver ativo, retorna token temporário.",
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado ou requer verificação 2FA",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          }
        },
        "summary": "Login no sistema",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/verify-2fa": {
      "post": {
        "description": "Valida o código do aplicativo autenticador para login com 2FA",
        "operationId": "AuthController_verifyTwoFactor",
        "parameters": [
          {
            "name": "authorization",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyTwoFactorDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Código verificado e token JWT retornado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          }
        },
        "summary": "Verificar código 2FA",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/2fa/setup": {
      "post": {
        "description": "Gera secret e QR Code para configuração no aplicativo autenticador",
        "operationId": "AuthController_setupTwoFactor",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Configurar 2FA",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/2fa/enable": {
      "post": {
        "description": "Ativa a autenticação em dois fatores após verificação do código",
        "operationId": "AuthController_enableTwoFactor",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnableTwoFactorDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Ativar 2FA",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/google": {
      "get": {
        "operationId": "AuthController_googleAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Login com Google",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/google/callback": {
      "get": {
        "operationId": "AuthController_googleAuthRedirect",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Callback do Google",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/discord": {
      "get": {
        "operationId": "AuthController_discordAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Login com Discord",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/discord/callback": {
      "get": {
        "operationId": "AuthController_discordAuthRedirect",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Callback do Discord",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/facebook": {
      "get": {
        "operationId": "AuthController_facebookAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Login com Facebook",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/facebook/callback": {
      "get": {
        "operationId": "AuthController_facebookAuthRedirect",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Callback do Facebook",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/steam": {
      "get": {
        "operationId": "AuthController_steamAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Login com Steam",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/steam/callback": {
      "get": {
        "operationId": "AuthController_steamAuthRedirect",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Callback do Steam",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/twitch": {
      "get": {
        "operationId": "AuthController_twitchAuth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Login com Twitch",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/auth/twitch/callback": {
      "get": {
        "operationId": "AuthController_twitchAuthRedirect",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Callback do Twitch",
        "tags": [
          "Autenticação"
        ]
      }
    },
    "/game": {
      "post": {
        "operationId": "GameController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateGameDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Jogo criado com sucesso."
          }
        },
        "summary": "Criar um novo jogo",
        "tags": [
          "Jogos"
        ]
      },
      "get": {
        "operationId": "GameController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de jogos retornada com sucesso."
          }
        },
        "summary": "Listar todos os jogos",
        "tags": [
          "Jogos"
        ]
      }
    },
    "/game/{id}": {
      "get": {
        "operationId": "GameController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Jogo encontrado."
          }
        },
        "summary": "Buscar um jogo pelo ID",
        "tags": [
          "Jogos"
        ]
      },
      "put": {
        "operationId": "GameController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGameDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Jogo atualizado com sucesso."
          }
        },
        "summary": "Atualizar um jogo pelo ID",
        "tags": [
          "Jogos"
        ]
      },
      "delete": {
        "operationId": "GameController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Jogo removido com sucesso."
          }
        },
        "summary": "Remover um jogo pelo ID",
        "tags": [
          "Jogos"
        ]
      }
    },
    "/game/{id}/images": {
      "patch": {
        "operationId": "GameController_updateGameImages",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGameImagesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Jogos"
        ]
      }
    },
    "/service": {
      "post": {
        "description": "Cria um novo serviço com upload de imagens para o S3",
        "operationId": "ServiceController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Dados do serviço e arquivos de imagem",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "banner": {
                    "type": "string",
                    "format": "binary",
                    "description": "Imagem banner do serviço"
                  },
                  "logo": {
                    "type": "string",
                    "format": "binary",
                    "description": "Logo do serviço"
                  },
                  "icon": {
                    "type": "string",
                    "format": "binary",
                    "description": "Ícone do serviço"
                  },
                  "poster": {
                    "type": "string",
                    "format": "binary",
                    "description": "Poster do serviço"
                  },
                  "data": {
                    "type": "string",
                    "description": "JSON stringificado com os dados do serviço",
                    "example": "{\n            \"name\": \"Elo Boost\",\n            \"type\": \"ELO_BOOST\",\n            \"title\": \"Boost Profissional\",\n            \"description\": \"Descrição do serviço\",\n            \"slug\": \"elo-boost\",\n            \"gameId\": \"uuid-do-jogo\"\n          }"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Serviço criado com sucesso."
          },
          "400": {
            "description": "Dados inválidos ou arquivos faltando."
          },
          "404": {
            "description": "Jogo não encontrado."
          }
        },
        "summary": "Criar um novo serviço",
        "tags": [
          "Serviços"
        ]
      },
      "get": {
        "operationId": "ServiceController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Lista de serviços retornada com sucesso."
          }
        },
        "summary": "Listar todos os serviços",
        "tags": [
          "Serviços"
        ]
      }
    },
    "/service/{id}": {
      "get": {
        "operationId": "ServiceController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Serviço encontrado e retornado."
          },
          "404": {
            "description": "Serviço não encontrado."
          }
        },
        "summary": "Obter serviço por ID",
        "tags": [
          "Serviços"
        ]
      },
      "put": {
        "operationId": "ServiceController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Serviço atualizado com sucesso."
          },
          "404": {
            "description": "Serviço ou jogo não encontrado."
          }
        },
        "summary": "Atualizar serviço",
        "tags": [
          "Serviços"
        ]
      },
      "delete": {
        "operationId": "ServiceController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Serviço removido com sucesso."
          },
          "404": {
            "description": "Serviço não encontrado."
          }
        },
        "summary": "Remover serviço",
        "tags": [
          "Serviços"
        ]
      }
    },
    "/service/{id}/images": {
      "post": {
        "description": "Atualiza as imagens de um serviço existente",
        "operationId": "ServiceController_updateImages",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Arquivos de imagem para atualização",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "banner": {
                    "type": "string",
                    "format": "binary",
                    "description": "Novo banner (opcional)"
                  },
                  "logo": {
                    "type": "string",
                    "format": "binary",
                    "description": "Nova logo (opcional)"
                  },
                  "icon": {
                    "type": "string",
                    "format": "binary",
                    "description": "Novo ícone (opcional)"
                  },
                  "poster": {
                    "type": "string",
                    "format": "binary",
                    "description": "Novo poster (opcional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Atualizar imagens do serviço",
        "tags": [
          "Serviços"
        ]
      }
    },
    "/service/game/{gameId}": {
      "get": {
        "description": "Retorna todos os serviços associados a um jogo específico",
        "operationId": "ServiceController_findByGame",
        "parameters": [
          {
            "name": "gameId",
            "required": true,
            "in": "path",
            "description": "ID do jogo",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de serviços retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Service"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Jogo não encontrado"
          }
        },
        "summary": "Listar serviços por jogo",
        "tags": [
          "Serviços"
        ]
      }
    },
    "/service/slug/{slug}": {
      "get": {
        "description": "Retorna um serviço específico pelo seu slug",
        "operationId": "ServiceController_findBySlug",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "description": "Slug do serviço",
            "schema": {
              "example": "elo-boost",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Serviço encontrado e retornado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Service"
                }
              }
            }
          },
          "404": {
            "description": "Serviço não encontrado"
          }
        },
        "summary": "Obter serviço por slug",
        "tags": [
          "Serviços"
        ]
      }
    },
    "/service/{serviceId}/addons": {
      "post": {
        "operationId": "ServiceAddonsController_addAddon",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAddonDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Addon criado com sucesso"
          },
          "404": {
            "description": "Serviço não encontrado"
          }
        },
        "summary": "Adicionar addon a um serviço",
        "tags": [
          "Serviços - Addons"
        ]
      },
      "get": {
        "operationId": "ServiceAddonsController_getAddons",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de addons retornada"
          },
          "404": {
            "description": "Serviço não encontrado"
          }
        },
        "summary": "Listar todos os addons de um serviço",
        "tags": [
          "Serviços - Addons"
        ]
      }
    },
    "/service/{serviceId}/addons/{addonId}": {
      "get": {
        "operationId": "ServiceAddonsController_getAddon",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addonId",
            "required": true,
            "in": "path",
            "description": "ID do addon",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Addon retornado"
          },
          "404": {
            "description": "Serviço ou addon não encontrado"
          }
        },
        "summary": "Obter um addon específico",
        "tags": [
          "Serviços - Addons"
        ]
      },
      "put": {
        "operationId": "ServiceAddonsController_updateAddon",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addonId",
            "required": true,
            "in": "path",
            "description": "ID do addon",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAddonDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Addon atualizado"
          },
          "404": {
            "description": "Serviço ou addon não encontrado"
          }
        },
        "summary": "Atualizar um addon",
        "tags": [
          "Serviços - Addons"
        ]
      },
      "delete": {
        "operationId": "ServiceAddonsController_removeAddon",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addonId",
            "required": true,
            "in": "path",
            "description": "ID do addon",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Addon removido"
          },
          "404": {
            "description": "Serviço ou addon não encontrado"
          }
        },
        "summary": "Remover um addon",
        "tags": [
          "Serviços - Addons"
        ]
      }
    },
    "/service/{serviceId}/preferences": {
      "post": {
        "operationId": "ServicePreferencesController_addPreference",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePreferenceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Preference criada com sucesso"
          },
          "404": {
            "description": "Serviço não encontrado"
          }
        },
        "summary": "Adicionar preference a um serviço",
        "tags": [
          "Serviços - Preferences"
        ]
      },
      "get": {
        "operationId": "ServicePreferencesController_getPreferences",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de preferences retornada"
          },
          "404": {
            "description": "Serviço não encontrado"
          }
        },
        "summary": "Listar todas as preferences de um serviço",
        "tags": [
          "Serviços - Preferences"
        ]
      }
    },
    "/service/{serviceId}/preferences/{preferenceId}": {
      "get": {
        "operationId": "ServicePreferencesController_getPreference",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "preferenceId",
            "required": true,
            "in": "path",
            "description": "ID da preference",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Preference retornada"
          },
          "404": {
            "description": "Serviço ou preference não encontrada"
          }
        },
        "summary": "Obter uma preference específica",
        "tags": [
          "Serviços - Preferences"
        ]
      },
      "put": {
        "operationId": "ServicePreferencesController_updatePreference",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "preferenceId",
            "required": true,
            "in": "path",
            "description": "ID da preference",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePreferenceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Preference atualizada"
          },
          "404": {
            "description": "Serviço ou preference não encontrada"
          }
        },
        "summary": "Atualizar uma preference",
        "tags": [
          "Serviços - Preferences"
        ]
      },
      "delete": {
        "operationId": "ServicePreferencesController_removePreference",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "preferenceId",
            "required": true,
            "in": "path",
            "description": "ID da preference",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Preference removida"
          },
          "404": {
            "description": "Serviço ou preference não encontrada"
          }
        },
        "summary": "Remover uma preference",
        "tags": [
          "Serviços - Preferences"
        ]
      }
    },
    "/service/{serviceId}/ranks": {
      "post": {
        "description": "Cria um novo rank com upload de imagem para o S3",
        "operationId": "ServiceRanksController_addRank",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados do rank e imagem",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Imagem do rank (obrigatória)"
                  },
                  "data": {
                    "type": "string",
                    "description": "JSON com os dados do rank",
                    "example": "{\n            \"id\": \"unranked\",\n            \"name\": \"Unranked\",\n            \"tier\": 0,\n            \"multiplier\": 0.8,\n            \"mainColor\": \"#242323\"\n          }"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Rank criado com sucesso"
          },
          "400": {
            "description": "Dados inválidos ou imagem faltando"
          },
          "404": {
            "description": "Serviço não encontrado"
          }
        },
        "summary": "Adicionar um novo rank",
        "tags": [
          "Serviços - Ranks"
        ]
      },
      "get": {
        "description": "Retorna todos os ranks de um serviço",
        "operationId": "ServiceRanksController_getRanks",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de ranks retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Serviço não encontrado"
          }
        },
        "summary": "Listar todos os ranks",
        "tags": [
          "Serviços - Ranks"
        ]
      }
    },
    "/service/{serviceId}/ranks/{rankId}": {
      "get": {
        "description": "Retorna os detalhes de um rank pelo seu ID",
        "operationId": "ServiceRanksController_getRank",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          },
          {
            "name": "rankId",
            "required": true,
            "in": "path",
            "description": "ID do rank",
            "schema": {
              "example": "unranked",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rank retornado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Serviço ou rank não encontrado"
          }
        },
        "summary": "Obter um rank específico",
        "tags": [
          "Serviços - Ranks"
        ]
      },
      "put": {
        "description": "Atualiza os dados de um rank existente",
        "operationId": "ServiceRanksController_updateRank",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          },
          {
            "name": "rankId",
            "required": true,
            "in": "path",
            "description": "ID do rank",
            "schema": {
              "example": "unranked",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Dados do rank e imagem opcional",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Nova imagem do rank (opcional)"
                  },
                  "data": {
                    "type": "string",
                    "description": "JSON com os dados atualizados do rank",
                    "example": "{\n            \"name\": \"Unranked Atualizado\",\n            \"multiplier\": 0.9\n          }"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rank atualizado com sucesso"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "404": {
            "description": "Serviço ou rank não encontrado"
          }
        },
        "summary": "Atualizar um rank",
        "tags": [
          "Serviços - Ranks"
        ]
      },
      "delete": {
        "description": "Remove permanentemente um rank do serviço",
        "operationId": "ServiceRanksController_removeRank",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          },
          {
            "name": "rankId",
            "required": true,
            "in": "path",
            "description": "ID do rank",
            "schema": {
              "example": "unranked",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rank removido com sucesso"
          },
          "404": {
            "description": "Serviço ou rank não encontrado"
          }
        },
        "summary": "Remover um rank",
        "tags": [
          "Serviços - Ranks"
        ]
      }
    },
    "/service/{serviceId}/ranks/{rankId}/image": {
      "patch": {
        "description": "Atualiza apenas a imagem de um rank existente",
        "operationId": "ServiceRanksController_updateRankImage",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "description": "ID do serviço",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          },
          {
            "name": "rankId",
            "required": true,
            "in": "path",
            "description": "ID do rank",
            "schema": {
              "example": "gold1",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Nova imagem para o rank",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Nova imagem do rank"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Imagem do rank atualizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Imagem não fornecida ou inválida"
          },
          "404": {
            "description": "Serviço ou rank não encontrado"
          }
        },
        "summary": "Atualizar imagem de um rank",
        "tags": [
          "Serviços - Ranks"
        ]
      }
    },
    "/admin": {
      "post": {
        "description": "Cria um novo administrador no sistema, com nome, e-mail e senha.",
        "operationId": "AdminController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAdminDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Administrador criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admin"
                }
              }
            }
          }
        },
        "summary": "Cria um novo administrador",
        "tags": [
          "Adminstração"
        ]
      },
      "get": {
        "description": "Retorna uma lista paginada de admins cadastrados no sistema. É possível controlar o número da página e o limite de itens por página.",
        "operationId": "AdminController_findAll",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Quantidade de admins por página. Define o tamanho do resultado retornado.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página que deseja visualizar. Começa a partir de 1.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Listar admins com paginação",
        "tags": [
          "Adminstração"
        ]
      }
    },
    "/admin/{id}": {
      "get": {
        "description": "Busca um administrador específico utilizando seu ID único.",
        "operationId": "AdminController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Administrador encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admin"
                }
              }
            }
          }
        },
        "summary": "Busca um administrador por ID",
        "tags": [
          "Adminstração"
        ]
      },
      "patch": {
        "description": "Atualiza o nome, e-mail ou senha de um administrador existente.",
        "operationId": "AdminController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAdminDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Administrador atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Admin"
                }
              }
            }
          }
        },
        "summary": "Atualiza os dados de um administrador",
        "tags": [
          "Adminstração"
        ]
      },
      "delete": {
        "description": "Remove um administrador do sistema utilizando seu ID.",
        "operationId": "AdminController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Administrador removido com sucesso."
          }
        },
        "summary": "Remove um administrador",
        "tags": [
          "Adminstração"
        ]
      }
    },
    "/notifications": {
      "post": {
        "description": "Cria uma nova notificação para um usuário ou geral",
        "operationId": "NotificationController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Cria uma nova notificação para um usuário ou geral",
        "tags": [
          "Notificações"
        ]
      },
      "get": {
        "description": "Obtenha todas as notificações",
        "operationId": "NotificationController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Lista todas as notificações",
        "tags": [
          "Notificações"
        ]
      }
    },
    "/notifications/user/{id}": {
      "get": {
        "description": "Obtenha todas as notificações de um usuário especifico",
        "operationId": "NotificationController_findUserNotifications",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Lista as notificações usuário específico",
        "tags": [
          "Notificações"
        ]
      }
    },
    "/booster": {
      "post": {
        "description": "Cria um novo booster no sistema com dados como nome, e-mail, Discord e WhatsApp. O e-mail precisa ser único.",
        "operationId": "BoosterController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoosterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Booster criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booster"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos ou e-mail já cadastrado."
          }
        },
        "summary": "Criar booster",
        "tags": [
          "Booster"
        ]
      },
      "get": {
        "description": "Retorna uma lista paginada de boosters cadastrados no sistema. É possível controlar o número da página e o limite de itens por página.",
        "operationId": "BoosterController_findAll",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Quantidade de boosters por página. Define o tamanho do resultado retornado.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página que deseja visualizar. Começa a partir de 1.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Listar boosters com paginação",
        "tags": [
          "Booster"
        ]
      }
    },
    "/booster/{id}": {
      "get": {
        "description": "Retorna os dados de um booster específico com base no ID informado.",
        "operationId": "BoosterController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador único do booster (UUID).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Booster encontrado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booster"
                }
              }
            }
          },
          "404": {
            "description": "Booster não encontrado para o ID informado."
          }
        },
        "summary": "Buscar booster por ID",
        "tags": [
          "Booster"
        ]
      },
      "patch": {
        "description": "Atualiza os dados de um booster existente. Pode alterar nome, e-mail, Discord, WhatsApp e outros campos.",
        "operationId": "BoosterController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador único do booster a ser atualizado.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBoosterUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Booster atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booster"
                }
              }
            }
          },
          "404": {
            "description": "Booster não encontrado para o ID informado."
          }
        },
        "summary": "Atualizar booster",
        "tags": [
          "Booster"
        ]
      },
      "delete": {
        "description": "Remove um booster do sistema com base no ID fornecido.",
        "operationId": "BoosterController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Identificador único do booster a ser removido.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Booster removido com sucesso."
          },
          "404": {
            "description": "Booster não encontrado para o ID informado."
          }
        },
        "summary": "Remover booster",
        "tags": [
          "Booster"
        ]
      }
    },
    "/booster/{id}/rank/up": {
      "patch": {
        "description": "Aumenta o rank do booster manualmente para o próximo nível, caso exista.",
        "operationId": "BoosterController_increaseRank",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do booster",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Booster promovido com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booster"
                }
              }
            }
          }
        },
        "summary": "Subir booster de rank manualmente",
        "tags": [
          "Booster"
        ]
      }
    },
    "/booster/{id}/rank/down": {
      "patch": {
        "description": "Diminui o rank do booster manualmente para o nível anterior, caso exista.",
        "operationId": "BoosterController_decreaseRank",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do booster",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Booster rebaixado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booster"
                }
              }
            }
          }
        },
        "summary": "Reduzir booster de rank manualmente",
        "tags": [
          "Booster"
        ]
      }
    },
    "/booster/{id}/progress": {
      "get": {
        "description": "Retorna informações sobre o rank atual, serviços realizados e quanto falta para o próximo rank.",
        "operationId": "BoosterController_getProgress",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do booster",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Progresso retornado com sucesso."
          }
        },
        "summary": "Obter progresso de rank do booster",
        "tags": [
          "Booster"
        ]
      }
    },
    "/booster/{id}/commission": {
      "patch": {
        "description": "Define um valor manual para a comissão de um booster.",
        "operationId": "BoosterController_updateCommission",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do booster",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommissionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Atualizar comissão do booster manualmente",
        "tags": [
          "Booster"
        ]
      },
      "get": {
        "description": "Retorna o valor atual da comissão em percentual (0.0 a 1.0).",
        "operationId": "BoosterController_getCommission",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do booster",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Obter comissão atual do booster",
        "tags": [
          "Booster"
        ]
      }
    },
    "/orders": {
      "post": {
        "description": "Cria um novo pedido com todas as informações obrigatórias e opcionais.",
        "operationId": "OrderController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Criar pedido",
        "tags": [
          "Pedidos"
        ]
      },
      "get": {
        "description": "Retorna todos os pedidos com suas respectivas relações.",
        "operationId": "OrderController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Listar pedidos",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/orders/{id}": {
      "get": {
        "description": "Retorna os detalhes de um pedido específico.",
        "operationId": "OrderController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do pedido",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Buscar por ID",
        "tags": [
          "Pedidos"
        ]
      },
      "delete": {
        "description": "Remove permanentemente um pedido pelo ID.",
        "operationId": "OrderController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do pedido",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Excluir pedido",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/orders/by-client/{clientId}": {
      "get": {
        "operationId": "OrderController_findByClient",
        "parameters": [
          {
            "name": "clientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Status de progresso do pedido",
            "schema": {
              "enum": [
                "PENDING",
                "IN_PROGRESS",
                "PENDING_APRO",
                "AVALIABLE",
                "COMPLETED",
                "CANCELED",
                "REFUND_REQUESTED",
                "AWAITING_APPROVAL"
              ],
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página para paginação. Valor padrão é 1.",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Quantidade de itens por página. Valor padrão é 10.",
            "schema": {
              "example": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Listar pedidos por cliente (com paginação e filtro por status)",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/orders/by-booster/{boosterId}": {
      "get": {
        "operationId": "OrderController_findByBooster",
        "parameters": [
          {
            "name": "boosterId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Status de progresso do pedido",
            "schema": {
              "enum": [
                "PENDING",
                "IN_PROGRESS",
                "PENDING_APRO",
                "AVALIABLE",
                "COMPLETED",
                "CANCELED",
                "REFUND_REQUESTED",
                "AWAITING_APPROVAL"
              ],
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página para paginação. Valor padrão é 1.",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Quantidade de itens por página. Valor padrão é 10.",
            "schema": {
              "example": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Listar pedidos por booster (com paginação e filtro por status)",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/orders/by-status": {
      "get": {
        "operationId": "OrderController_findByStatus",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "description": "Status de progresso do pedido",
            "schema": {
              "enum": [
                "PENDING",
                "IN_PROGRESS",
                "PENDING_APRO",
                "AVALIABLE",
                "COMPLETED",
                "CANCELED",
                "REFUND_REQUESTED",
                "AWAITING_APPROVAL"
              ],
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página para paginação. Valor padrão é 1.",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Quantidade de itens por página. Valor padrão é 10.",
            "schema": {
              "example": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Listar pedidos por status de progresso",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/orders/{id}/progress-status": {
      "patch": {
        "operationId": "OrderController_updateProgressStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do pedido",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgressStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status de progresso atualizado com sucesso"
          }
        },
        "summary": "Atualizar status de progresso de um pedido",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/orders/{id}/payment-status": {
      "patch": {
        "operationId": "OrderController_updatePaymentStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do pedido",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status de pagamento atualizado com sucesso"
          }
        },
        "summary": "Atualizar status de pagamento de um pedido",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/orders/{id}/rank-current": {
      "patch": {
        "operationId": "OrderController_updateRankCurrent",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do pedido",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRankDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rank atual atualizado com sucesso"
          }
        },
        "summary": "Atualizar rank atual do pedido",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/orders/{id}/rank-desired": {
      "patch": {
        "operationId": "OrderController_updateRankDesired",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do pedido",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRankDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rank desejado atualizado com sucesso"
          }
        },
        "summary": "Atualizar rank desejado do pedido",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/orders/{id}/price": {
      "patch": {
        "operationId": "OrderController_updatePrice",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID do pedido",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePriceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Preço atualizado com sucesso"
          }
        },
        "summary": "Atualizar preço de um pedido",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/orders/{id}/booster": {
      "patch": {
        "operationId": "OrderController_updateBooster",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBoosterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Atualizar o booster de um pedido",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/orders/{id}/progress": {
      "patch": {
        "operationId": "OrderController_updateProgress",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Atualizar progresso do pedido",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/orders/{id}/request-refund": {
      "post": {
        "description": "",
        "operationId": "OrderController_requestRefund",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestRefundDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Solicitar reembolso (cliente)",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/orders/{id}/cancel-refund": {
      "post": {
        "operationId": "OrderController_cancelRefund",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Cancelar reembolso (booster/seller)",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/orders/{id}/process-refund": {
      "post": {
        "operationId": "OrderController_processRefund",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Processar reembolso (admin)",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/orders/{id}/complete": {
      "post": {
        "operationId": "OrderController_completeOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Finalizar pedido (booster)",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/orders/{id}/approve-completion": {
      "post": {
        "operationId": "OrderController_approveCompletion",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Aprovar conclusão (cliente)",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/orders/{id}/reject-completion": {
      "post": {
        "operationId": "OrderController_rejectCompletion",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Rejeitar conclusão (cliente)",
        "tags": [
          "Pedidos"
        ]
      }
    },
    "/copywriters": {
      "post": {
        "description": "Cria um novo perfil de copywriter com dados básicos e contato.",
        "operationId": "CopywriterController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCopywriterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Copywriter"
                }
              }
            }
          }
        },
        "summary": "Criar copywriter",
        "tags": [
          "Escritores"
        ]
      },
      "get": {
        "description": "Lista todos os copywriters registrados no sistema.",
        "operationId": "CopywriterController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Listar copywriters",
        "tags": [
          "Escritores"
        ]
      }
    },
    "/copywriters/{id}": {
      "get": {
        "description": "Busca um copywriter específico pelo ID fornecido.",
        "operationId": "CopywriterController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID do copywriter.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Buscar por ID",
        "tags": [
          "Escritores"
        ]
      },
      "patch": {
        "description": "Atualiza os dados de um copywriter existente.",
        "operationId": "CopywriterController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID do copywriter.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCopywriterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Atualizar copywriter",
        "tags": [
          "Escritores"
        ]
      },
      "delete": {
        "description": "Remove um copywriter do sistema pelo ID.",
        "operationId": "CopywriterController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "UUID do copywriter.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Remover copywriter",
        "tags": [
          "Escritores"
        ]
      }
    },
    "/blog": {
      "post": {
        "description": "Cria um novo artigo com tempo de leitura estimado.",
        "operationId": "BlogController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBlogDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Criar artigo",
        "tags": [
          "Blog"
        ]
      },
      "get": {
        "description": "Lista todos os artigos com paginação.",
        "operationId": "BlogController_findAll",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Listar artigos",
        "tags": [
          "Blog"
        ]
      }
    },
    "/blog/copywriter/{copywriterId}": {
      "get": {
        "description": "Lista artigos de um copywriter com opção de filtrar publicados.",
        "operationId": "BlogController_findByCopywriter",
        "parameters": [
          {
            "name": "copywriterId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "published",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Buscar por copywriter",
        "tags": [
          "Blog"
        ]
      }
    },
    "/blog/game/{gameId}": {
      "get": {
        "description": "Lista artigos associados a um game específico com paginação.",
        "operationId": "BlogController_findByGameId",
        "parameters": [
          {
            "name": "gameId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {}
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Buscar por gameId",
        "tags": [
          "Blog"
        ]
      }
    },
    "/blog/cover": {
      "post": {
        "operationId": "BlogController_updateAvatar",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Atualizar capa do artigo",
        "tags": [
          "Blog"
        ]
      }
    },
    "/blog/most-viewed": {
      "get": {
        "description": "Retorna os artigos com maior número de visualizações.",
        "operationId": "BlogController_findMostViewed",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Artigos mais vistos",
        "tags": [
          "Blog"
        ]
      }
    },
    "/blog/href/{href}": {
      "get": {
        "description": "Busca um artigo pelo href e aumenta a contagem de visualizações.",
        "operationId": "BlogController_findByHref",
        "parameters": [
          {
            "name": "href",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Buscar por href",
        "tags": [
          "Blog"
        ]
      }
    },
    "/blog/{id}": {
      "get": {
        "description": "Retorna um artigo específico por ID.",
        "operationId": "BlogController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Buscar artigo",
        "tags": [
          "Blog"
        ]
      },
      "patch": {
        "description": "Atualiza dados de um artigo.",
        "operationId": "BlogController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBlogDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Atualizar artigo",
        "tags": [
          "Blog"
        ]
      },
      "delete": {
        "description": "Remove um artigo do blog.",
        "operationId": "BlogController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Remover artigo",
        "tags": [
          "Blog"
        ]
      }
    },
    "/blog/{id}/publish": {
      "patch": {
        "description": "Publica um artigo do blog.",
        "operationId": "BlogController_publish",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Publicar artigo",
        "tags": [
          "Blog"
        ]
      }
    },
    "/blog/{id}/unpublish": {
      "patch": {
        "description": "Despublica um artigo do blog.",
        "operationId": "BlogController_unpublish",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Despublicar artigo",
        "tags": [
          "Blog"
        ]
      }
    },
    "/payments/create-intent": {
      "post": {
        "description": "Endpoint para criar uma interação de pagamento com Stripe.",
        "operationId": "PaymentController_createPaymentIntent",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Criar intenção de pagamento com Stripe",
        "tags": [
          "Pagamentos"
        ]
      }
    },
    "/payments/mercadopago": {
      "post": {
        "description": "Endpoint para criar uma interação de pagamento com MercadoPago.",
        "operationId": "PaymentController_createMercadoPagoPayment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Criar interação de pagamento com MercadoPago",
        "tags": [
          "Pagamentos"
        ]
      }
    },
    "/payments/crypto": {
      "post": {
        "description": "Endpoint para criar uma interação de pagamento com Crypto.",
        "operationId": "PaymentController_createCryptoPayment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Criar interação de pagamento com Crypto",
        "tags": [
          "Pagamentos"
        ]
      }
    },
    "/payments/webhook/stripe": {
      "post": {
        "operationId": "PaymentController_handleStripeWebhook",
        "parameters": [
          {
            "name": "stripe-signature",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Pagamentos"
        ]
      }
    },
    "/payments/webhook/mercadopago": {
      "post": {
        "operationId": "PaymentController_handleMercadoPagoWebhook",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Pagamentos"
        ]
      }
    },
    "/payments/webhook/crypto": {
      "post": {
        "operationId": "PaymentController_cryptoWebhook",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Pagamentos"
        ]
      }
    },
    "/coupons": {
      "post": {
        "description": "Cria um novo cupom com nome, valor, data de expiração, quantidade de usos e status ativo/inativo.",
        "operationId": "CouponController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCouponDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cupom criado com sucesso."
          }
        },
        "summary": "Criar cupom",
        "tags": [
          "Cupons"
        ]
      },
      "get": {
        "description": "Lista todos os cupons cadastrados no sistema com filtros opcionais.",
        "operationId": "CouponController_findAll",
        "parameters": [
          {
            "name": "isPremium",
            "required": false,
            "in": "query",
            "description": "Filtrar cupons premium",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "expiringSoon",
            "required": false,
            "in": "query",
            "description": "Filtrar cupons próximos da expiração (3 dias)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "mostUsed",
            "required": false,
            "in": "query",
            "description": "Ordenar por cupons mais utilizados",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Quantidade de itens por página",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página para paginação",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de cupons retornada com sucesso."
          }
        },
        "summary": "Listar cupons",
        "tags": [
          "Cupons"
        ]
      }
    },
    "/coupons/{id}": {
      "get": {
        "description": "Busca um cupom específico a partir do seu identificador único.",
        "operationId": "CouponController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cupom encontrado com sucesso."
          },
          "404": {
            "description": "Cupom não encontrado."
          }
        },
        "summary": "Buscar cupom por ID",
        "tags": [
          "Cupons"
        ]
      },
      "put": {
        "description": "Atualiza os dados de um cupom existente com base no ID informado.",
        "operationId": "CouponController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCouponDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cupom atualizado com sucesso."
          },
          "404": {
            "description": "Cupom não encontrado."
          }
        },
        "summary": "Atualizar cupom",
        "tags": [
          "Cupons"
        ]
      },
      "delete": {
        "description": "Remove permanentemente um cupom do sistema com base no ID informado.",
        "operationId": "CouponController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cupom removido com sucesso."
          },
          "404": {
            "description": "Cupom não encontrado."
          }
        },
        "summary": "Remover cupom",
        "tags": [
          "Cupons"
        ]
      }
    },
    "/coupons/use": {
      "post": {
        "description": "Aplica o cupom informado, validando se ele está ativo, não expirado e se ainda possui usos disponíveis. Também incrementa o contador de uso.",
        "operationId": "CouponController_useCoupon",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UseCouponDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cupom aplicado com sucesso."
          },
          "400": {
            "description": "Invalido ou expirado cupom"
          },
          "404": {
            "description": "Invalido ou expirado cupom"
          }
        },
        "summary": "Usar cupom",
        "tags": [
          "Cupons"
        ]
      }
    },
    "/opcoins": {
      "post": {
        "description": "Cria um registro inicial de OpCoins para um usuário.",
        "operationId": "OpCoinController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOpCoinDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registro criado com sucesso."
          }
        },
        "summary": "Criar saldo de OpCoins",
        "tags": [
          "OpCoins"
        ]
      },
      "get": {
        "description": "Lista os saldos de OpCoins com paginação e filtro por usuário.",
        "operationId": "OpCoinController_findAll",
        "parameters": [
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Listar saldos",
        "tags": [
          "OpCoins"
        ]
      }
    },
    "/opcoins/{id}": {
      "get": {
        "description": "Busca um registro de OpCoins por ID.",
        "operationId": "OpCoinController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Buscar por ID",
        "tags": [
          "OpCoins"
        ]
      },
      "put": {
        "description": "Atualiza o registro de OpCoins com base no ID.",
        "operationId": "OpCoinController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOpCoinDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Atualizar",
        "tags": [
          "OpCoins"
        ]
      },
      "delete": {
        "description": "Remove um registro de OpCoins por ID.",
        "operationId": "OpCoinController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Remover",
        "tags": [
          "OpCoins"
        ]
      }
    },
    "/opcoins/increment": {
      "post": {
        "description": "Incrementa o valor de OpCoins para um usuário.",
        "operationId": "OpCoinController_increment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAmountDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Adicionar OpCoins",
        "tags": [
          "OpCoins"
        ]
      }
    },
    "/opcoins/decrement": {
      "post": {
        "description": "Decrementa o valor de OpCoins de um usuário.",
        "operationId": "OpCoinController_decrement",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAmountDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Reduzir OpCoins",
        "tags": [
          "OpCoins"
        ]
      }
    },
    "/sellers": {
      "post": {
        "description": "Cria um novo vendedor no sistema, com informações pessoais e de pagamento.",
        "operationId": "SellerController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSellerDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Vendedor criado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Seller"
                }
              }
            }
          }
        },
        "summary": "Cria um novo vendedor",
        "tags": [
          "Sellers"
        ]
      },
      "get": {
        "description": "Retorna uma lista paginada de vendedores cadastrados no sistema.",
        "operationId": "SellerController_findAll",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Quantidade de vendedores por página.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página que deseja visualizar. Começa a partir de 1.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Listar vendedores com paginação",
        "tags": [
          "Sellers"
        ]
      }
    },
    "/sellers/{id}": {
      "get": {
        "description": "Busca um vendedor específico utilizando seu ID único.",
        "operationId": "SellerController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vendedor encontrado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Seller"
                }
              }
            }
          }
        },
        "summary": "Busca um vendedor por ID",
        "tags": [
          "Sellers"
        ]
      },
      "patch": {
        "description": "Atualiza as informações de um vendedor existente.",
        "operationId": "SellerController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSellerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Vendedor atualizado com sucesso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Seller"
                }
              }
            }
          }
        },
        "summary": "Atualiza os dados de um vendedor",
        "tags": [
          "Sellers"
        ]
      },
      "delete": {
        "description": "Remove um vendedor do sistema utilizando seu ID.",
        "operationId": "SellerController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vendedor removido com sucesso."
          }
        },
        "summary": "Remove um vendedor",
        "tags": [
          "Sellers"
        ]
      }
    },
    "/sellers/{id}/document": {
      "post": {
        "description": "Upload da foto do documento para verificação do vendedor",
        "operationId": "SellerController_uploadDocument",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Foto do documento (CNH, RG ou Passaporte)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Documento enviado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentUploadResponseDto"
                }
              }
            }
          }
        },
        "summary": "Enviar documento de identificação",
        "tags": [
          "Sellers"
        ]
      }
    },
    "/sellers/{id}/document/approve": {
      "patch": {
        "description": "Endpoint para administradores aprovarem o documento enviado",
        "operationId": "SellerController_approveDocument",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Documento aprovado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Seller"
                }
              }
            }
          }
        },
        "summary": "Aprovar documento do vendedor",
        "tags": [
          "Sellers"
        ]
      }
    },
    "/sellers/{id}/document/reject": {
      "patch": {
        "description": "Endpoint para administradores rejeitarem o documento enviado",
        "operationId": "SellerController_rejectDocument",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Documento rejeitado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Seller"
                }
              }
            }
          }
        },
        "summary": "Rejeitar documento do vendedor",
        "tags": [
          "Sellers"
        ]
      }
    },
    "/wallets/{sellerId}/bank": {
      "post": {
        "operationId": "WalletController_registerBank",
        "parameters": [
          {
            "name": "sellerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterBankDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Registrar dados bancários",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallets/{sellerId}/transfer": {
      "post": {
        "operationId": "WalletController_transfer",
        "parameters": [
          {
            "name": "sellerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransferDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Iniciar transferência",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallets/{sellerId}/balance": {
      "get": {
        "operationId": "WalletController_getBalance",
        "parameters": [
          {
            "name": "sellerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Consultar saldo",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/apply/booster": {
      "post": {
        "description": "Envia uma aplicação para se tornar um Booster",
        "operationId": "ApplyController_applyAsBooster",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoosterApplyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Aplicação criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Apply"
                }
              }
            }
          }
        },
        "summary": "Aplicar para ser Booster",
        "tags": [
          "Aplicações"
        ]
      }
    },
    "/apply/seller": {
      "post": {
        "description": "Envia uma aplicação para se tornar um Vendedor",
        "operationId": "ApplyController_applyAsSeller",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSellerApplyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Aplicação criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Apply"
                }
              }
            }
          }
        },
        "summary": "Aplicar para ser Vendedor",
        "tags": [
          "Aplicações"
        ]
      }
    },
    "/apply": {
      "get": {
        "description": "Retorna todas as aplicações pendentes (para administradores)",
        "operationId": "ApplyController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Listar todas aplicações",
        "tags": [
          "Aplicações"
        ]
      }
    },
    "/apply/{id}/approve": {
      "patch": {
        "description": "Aprova uma aplicação e cria a conta correspondente",
        "operationId": "ApplyController_approve",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Aprovar aplicação",
        "tags": [
          "Aplicações"
        ]
      }
    },
    "/tickets/general": {
      "post": {
        "operationId": "TicketsController_createGeneral",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Criar ticket geral",
        "tags": [
          "Tickets"
        ]
      }
    },
    "/tickets/order": {
      "post": {
        "operationId": "TicketsController_createOrder",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "orderId": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Criar ticket relacionado a pedido",
        "tags": [
          "Tickets"
        ]
      }
    },
    "/tickets": {
      "get": {
        "operationId": "TicketsController_getUserTickets",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Listar tickets do usuário",
        "tags": [
          "Tickets"
        ]
      }
    },
    "/tickets/{id}/status": {
      "patch": {
        "operationId": "TicketsController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Atualizar status do ticket",
        "tags": [
          "Tickets"
        ]
      }
    },
    "/feedbacks": {
      "post": {
        "operationId": "FeedbacksController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeedbackDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Feedback criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Criar um novo feedback",
        "tags": [
          "Feedbacks"
        ]
      }
    },
    "/feedbacks/target/{targetType}/{targetId}": {
      "get": {
        "operationId": "FeedbacksController_getByTarget",
        "parameters": [
          {
            "name": "targetType",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de feedbacks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedbackResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obter feedbacks por destinatário",
        "tags": [
          "Feedbacks"
        ]
      }
    },
    "/feedbacks/order/{orderId}": {
      "get": {
        "operationId": "FeedbacksController_getByOrder",
        "parameters": [
          {
            "name": "orderId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback relacionado ao pedido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obter feedback por pedido",
        "tags": [
          "Feedbacks"
        ]
      }
    },
    "/trustpilot/reviews": {
      "get": {
        "description": "Retorna as últimas reviews da Trustpilot com média de avaliações",
        "operationId": "TrustpilotController_getReviews",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Reviews obtidas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustpilotResponseDto"
                }
              }
            }
          }
        },
        "summary": "Obter reviews da Trustpilot",
        "tags": [
          "Trustpilot"
        ]
      }
    },
    "/email": {
      "post": {
        "description": "Envia um e-mail usando templates pré-definidos ou HTML customizado",
        "operationId": "EmailController_sendEmail",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "E-mail enviado com sucesso"
          }
        },
        "summary": "Enviar e-mail",
        "tags": [
          "Email"
        ]
      }
    },
    "/email/welcome": {
      "post": {
        "description": "Envia o template de boas-vindas para novos usuários",
        "operationId": "EmailController_sendWelcomeEmail",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Enviar e-mail de boas-vindas",
        "tags": [
          "Email"
        ]
      }
    },
    "/discord/send": {
      "post": {
        "description": "Envia uma mensagem direta para um usuário no Discord",
        "operationId": "DiscordController_sendMessage",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendDiscordMessageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mensagem enviada com sucesso"
          }
        },
        "summary": "Enviar mensagem privada via Discord",
        "tags": [
          "Discord"
        ]
      }
    },
    "/products": {
      "post": {
        "description": "Cria um novo produto no marketplace",
        "operationId": "ProductsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Produto criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Criar novo produto",
        "tags": [
          "Produtos"
        ]
      },
      "get": {
        "description": "Retorna produtos paginados com possibilidade de filtros avançados",
        "operationId": "ProductsController_findAllPaginated",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Número da página",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Quantidade de itens por página",
            "schema": {
              "example": 10,
              "type": "number"
            }
          },
          {
            "name": "gameId",
            "required": false,
            "in": "query",
            "description": "ID do jogo para filtrar",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "required": false,
            "in": "query",
            "description": "Plataforma para filtrar (pc, ps5, xbox, etc.)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minPrice",
            "required": false,
            "in": "query",
            "description": "Preço mínimo",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxPrice",
            "required": false,
            "in": "query",
            "description": "Preço máximo",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "isBoosted",
            "required": false,
            "in": "query",
            "description": "Filtrar apenas produtos destacados",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Termo para busca no título",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de produtos paginada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar produtos com paginação e filtros",
        "tags": [
          "Produtos"
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "description": "Retorna os detalhes de um produto específico",
        "operationId": "ProductsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do produto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Obter produto por ID",
        "tags": [
          "Produtos"
        ]
      },
      "patch": {
        "description": "Atualiza as informações de um produto",
        "operationId": "ProductsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Produto atualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar produto",
        "tags": [
          "Produtos"
        ]
      },
      "delete": {
        "description": "Remove permanentemente um produto do marketplace",
        "operationId": "ProductsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Produto removido"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Remover produto",
        "tags": [
          "Produtos"
        ]
      }
    },
    "/products/{id}/price": {
      "patch": {
        "description": "Atualiza apenas o preço de um produto",
        "operationId": "ProductsController_updatePrice",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePriceProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Preço atualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar preço",
        "tags": [
          "Produtos"
        ]
      }
    },
    "/products/{id}/stock": {
      "patch": {
        "description": "Adiciona ou remove itens do estoque (use valor negativo para remover)",
        "operationId": "ProductsController_updateStock",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStockDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Estoque atualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar estoque",
        "tags": [
          "Produtos"
        ]
      }
    },
    "/products/{id}/deactivate": {
      "patch": {
        "description": "Desativa um produto (não remove, apenas oculta)",
        "operationId": "ProductsController_deactivate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Produto desativado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Desativar produto",
        "tags": [
          "Produtos"
        ]
      }
    },
    "/products/seller/{sellerId}": {
      "get": {
        "description": "Retorna todos os produtos de um vendedor específico",
        "operationId": "ProductsController_findBySeller",
        "parameters": [
          {
            "name": "sellerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de produtos do vendedor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar produtos por vendedor",
        "tags": [
          "Produtos"
        ]
      }
    },
    "/products/game/{gameId}": {
      "get": {
        "description": "Retorna produtos de um jogo específico com filtros aplicados",
        "operationId": "ProductsController_findByGameWithFilters",
        "parameters": [
          {
            "name": "gameId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de produtos do jogo",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar produtos por jogo com filtros",
        "tags": [
          "Produtos"
        ]
      }
    },
    "/products/{id}/items": {
      "post": {
        "description": "Adiciona novos itens/contas ao produto existente",
        "operationId": "ProductsController_addItems",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddItemsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Itens adicionados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Adicionar itens ao produto",
        "tags": [
          "Produtos"
        ]
      },
      "delete": {
        "description": "Remove um item específico do produto",
        "operationId": "ProductsController_removeItem",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item removido com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Remover item do produto",
        "tags": [
          "Produtos"
        ]
      },
      "patch": {
        "description": "Substitui todos os itens do produto por uma nova lista",
        "operationId": "ProductsController_updateItems",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateItemsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Itens atualizados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Atualizar todos os itens",
        "tags": [
          "Produtos"
        ]
      },
      "get": {
        "description": "Retorna todos os itens/contas do produto",
        "operationId": "ProductsController_getItems",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de itens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Listar itens do produto",
        "tags": [
          "Produtos"
        ]
      }
    },
    "/products/{id}/boost": {
      "patch": {
        "description": "Destaca o produto por um número de dias",
        "operationId": "ProductsController_boostProduct",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "days",
            "required": true,
            "in": "query",
            "description": "Número de dias para destacar o produto",
            "schema": {
              "example": 7,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Produto destacado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Destacar produto",
        "tags": [
          "Produtos"
        ]
      }
    },
    "/analytics/sales": {
      "get": {
        "description": "Retorna métricas de vendas com filtros por período, jogo e plataforma",
        "operationId": "AnalyticsController_getSales",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Data inicial no formato YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "Data final no formato YYYY-MM-DD",
            "schema": {
              "example": "2024-12-31",
              "type": "string"
            }
          },
          {
            "name": "gameId",
            "required": false,
            "in": "query",
            "description": "ID do jogo para filtrar",
            "schema": {
              "example": "game123",
              "type": "string"
            }
          },
          {
            "name": "platform",
            "required": false,
            "in": "query",
            "description": "Plataforma para filtrar (pc, ps5, xbox, etc.)",
            "schema": {
              "example": "pc",
              "type": "string"
            }
          },
          {
            "name": "groupBy",
            "required": false,
            "in": "query",
            "description": "Agrupamento por período (day, week, month, year)",
            "schema": {
              "example": "month",
              "type": "string"
            }
          },
          {
            "name": "sellerId",
            "required": false,
            "in": "query",
            "description": "ID do vendedor para filtrar",
            "schema": {
              "example": "seller123",
              "type": "string"
            }
          },
          {
            "name": "boosterId",
            "required": false,
            "in": "query",
            "description": "ID do booster para filtrar",
            "schema": {
              "example": "booster123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dados de vendas agregados"
          }
        },
        "summary": "Obter dados de vendas",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/profit": {
      "get": {
        "description": "Retorna métricas de lucro, custos e margem com filtros por período e jogo",
        "operationId": "AnalyticsController_getProfit",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Data inicial no formato YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "Data final no formato YYYY-MM-DD",
            "schema": {
              "example": "2024-12-31",
              "type": "string"
            }
          },
          {
            "name": "gameId",
            "required": false,
            "in": "query",
            "description": "ID do jogo para filtrar",
            "schema": {
              "example": "game123",
              "type": "string"
            }
          },
          {
            "name": "platform",
            "required": false,
            "in": "query",
            "description": "Plataforma para filtrar (pc, ps5, xbox, etc.)",
            "schema": {
              "example": "pc",
              "type": "string"
            }
          },
          {
            "name": "groupBy",
            "required": false,
            "in": "query",
            "description": "Agrupamento por período (day, week, month, year)",
            "schema": {
              "example": "month",
              "type": "string"
            }
          },
          {
            "name": "sellerId",
            "required": false,
            "in": "query",
            "description": "ID do vendedor para filtrar",
            "schema": {
              "example": "seller123",
              "type": "string"
            }
          },
          {
            "name": "boosterId",
            "required": false,
            "in": "query",
            "description": "ID do booster para filtrar",
            "schema": {
              "example": "booster123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dados de lucratividade agregados"
          }
        },
        "summary": "Obter dados de lucratividade",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/overview": {
      "get": {
        "description": "Retorna um resumo completo com todas as métricas principais",
        "operationId": "AnalyticsController_getOverview",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Data inicial no formato YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "Data final no formato YYYY-MM-DD",
            "schema": {
              "example": "2024-12-31",
              "type": "string"
            }
          },
          {
            "name": "gameId",
            "required": false,
            "in": "query",
            "description": "ID do jogo para filtrar",
            "schema": {
              "example": "game123",
              "type": "string"
            }
          },
          {
            "name": "platform",
            "required": false,
            "in": "query",
            "description": "Plataforma para filtrar (pc, ps5, xbox, etc.)",
            "schema": {
              "example": "pc",
              "type": "string"
            }
          },
          {
            "name": "groupBy",
            "required": false,
            "in": "query",
            "description": "Agrupamento por período (day, week, month, year)",
            "schema": {
              "example": "month",
              "type": "string"
            }
          },
          {
            "name": "sellerId",
            "required": false,
            "in": "query",
            "description": "ID do vendedor para filtrar",
            "schema": {
              "example": "seller123",
              "type": "string"
            }
          },
          {
            "name": "boosterId",
            "required": false,
            "in": "query",
            "description": "ID do booster para filtrar",
            "schema": {
              "example": "booster123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dados consolidados de análise"
          }
        },
        "summary": "Visão geral das métricas",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/export/sales": {
      "post": {
        "description": "Gera um relatório de vendas no formato especificado",
        "operationId": "ExportAnalyticsController_exportSalesReport",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Data inicial no formato YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "Data final no formato YYYY-MM-DD",
            "schema": {
              "example": "2024-12-31",
              "type": "string"
            }
          },
          {
            "name": "gameId",
            "required": false,
            "in": "query",
            "description": "ID do jogo para filtrar",
            "schema": {
              "example": "game123",
              "type": "string"
            }
          },
          {
            "name": "platform",
            "required": false,
            "in": "query",
            "description": "Plataforma para filtrar (pc, ps5, xbox, etc.)",
            "schema": {
              "example": "pc",
              "type": "string"
            }
          },
          {
            "name": "groupBy",
            "required": false,
            "in": "query",
            "description": "Agrupamento por período (day, week, month, year)",
            "schema": {
              "example": "month",
              "type": "string"
            }
          },
          {
            "name": "sellerId",
            "required": false,
            "in": "query",
            "description": "ID do vendedor para filtrar",
            "schema": {
              "example": "seller123",
              "type": "string"
            }
          },
          {
            "name": "boosterId",
            "required": false,
            "in": "query",
            "description": "ID do booster para filtrar",
            "schema": {
              "example": "booster123",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportAnalyticsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Arquivo do relatório"
          }
        },
        "summary": "Exportar Relatório de Vendas",
        "tags": [
          "Analytics - Exportar"
        ]
      }
    },
    "/analytics/games/performance": {
      "get": {
        "description": "Retorna métricas de desempenho agrupadas por jogo",
        "operationId": "GameAnalyticsController_getGamePerformance",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Data inicial no formato YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "Data final no formato YYYY-MM-DD",
            "schema": {
              "example": "2024-12-31",
              "type": "string"
            }
          },
          {
            "name": "gameId",
            "required": false,
            "in": "query",
            "description": "ID do jogo para filtrar",
            "schema": {
              "example": "game123",
              "type": "string"
            }
          },
          {
            "name": "platform",
            "required": false,
            "in": "query",
            "description": "Plataforma para filtrar (pc, ps5, xbox, etc.)",
            "schema": {
              "example": "pc",
              "type": "string"
            }
          },
          {
            "name": "groupBy",
            "required": false,
            "in": "query",
            "description": "Agrupamento por período (day, week, month, year)",
            "schema": {
              "example": "month",
              "type": "string"
            }
          },
          {
            "name": "sellerId",
            "required": false,
            "in": "query",
            "description": "ID do vendedor para filtrar",
            "schema": {
              "example": "seller123",
              "type": "string"
            }
          },
          {
            "name": "boosterId",
            "required": false,
            "in": "query",
            "description": "ID do booster para filtrar",
            "schema": {
              "example": "booster123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dados de desempenho por jogo"
          }
        },
        "summary": "Desempenho por Jogo",
        "tags": [
          "Analytics - Jogos"
        ]
      }
    },
    "/analytics/sellers/performance": {
      "get": {
        "description": "Retorna métricas de desempenho agrupadas por vendedor",
        "operationId": "SellerAnalyticsController_getSellerPerformance",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Data inicial no formato YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "Data final no formato YYYY-MM-DD",
            "schema": {
              "example": "2024-12-31",
              "type": "string"
            }
          },
          {
            "name": "gameId",
            "required": false,
            "in": "query",
            "description": "ID do jogo para filtrar",
            "schema": {
              "example": "game123",
              "type": "string"
            }
          },
          {
            "name": "platform",
            "required": false,
            "in": "query",
            "description": "Plataforma para filtrar (pc, ps5, xbox, etc.)",
            "schema": {
              "example": "pc",
              "type": "string"
            }
          },
          {
            "name": "groupBy",
            "required": false,
            "in": "query",
            "description": "Agrupamento por período (day, week, month, year)",
            "schema": {
              "example": "month",
              "type": "string"
            }
          },
          {
            "name": "sellerId",
            "required": false,
            "in": "query",
            "description": "ID do vendedor para filtrar",
            "schema": {
              "example": "seller123",
              "type": "string"
            }
          },
          {
            "name": "boosterId",
            "required": false,
            "in": "query",
            "description": "ID do booster para filtrar",
            "schema": {
              "example": "booster123",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dados de desempenho por vendedor"
          }
        },
        "summary": "Desempenho por Vendedor",
        "tags": [
          "Analytics - Vendedores"
        ]
      }
    }
  },
  "info": {
    "title": "API Overpowered.GG",
    "description": "Essa é a documentação da API Overpowered.GG",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "Overpowered.GG",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do usuário",
            "example": "João Lenos"
          },
          "email": {
            "type": "string",
            "description": "E-mail do usuário",
            "example": "FwH5M@example.com"
          }
        },
        "required": [
          "name",
          "email"
        ]
      },
      "User": {
        "type": "object",
        "properties": {}
      },
      "UpdateProfileDto": {
        "type": "object",
        "properties": {
          "bio": {
            "type": "string",
            "example": "Uma breve descrição sobre mim.",
            "description": "Biografia"
          },
          "birthDate": {
            "format": "date-time",
            "type": "string",
            "example": "1990-01-01",
            "description": "Data de nascimento"
          },
          "gender": {
            "type": "string",
            "enum": [
              "Masculino",
              "Feminino",
              "Prefiro não dizer",
              "Outro"
            ],
            "example": "Masculino",
            "description": "Genero"
          },
          "mainGameId": {
            "type": "string",
            "example": "1234-5678-9012-3456",
            "description": "ID do jogo principal"
          },
          "phone": {
            "type": "string",
            "example": "551112345678",
            "description": "Telefone para contato"
          },
          "discord": {
            "type": "string",
            "example": "joao1234#5678",
            "description": "ID do Discord"
          },
          "region": {
            "type": "string",
            "example": "BR"
          },
          "timezone": {
            "type": "string",
            "example": "America/Sao_Paulo"
          }
        }
      },
      "RegisterDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "João Silva",
            "description": "Nome do usuário"
          },
          "email": {
            "type": "string",
            "example": "joao.silva@example.com",
            "description": "Email do usuário"
          },
          "password": {
            "type": "string",
            "example": "senha123",
            "description": "Senha do usuário"
          }
        },
        "required": [
          "name",
          "email",
          "password"
        ]
      },
      "VerifyOtpDto": {
        "type": "object",
        "properties": {
          "otpCode": {
            "type": "string",
            "example": "123456",
            "description": "Código OTP"
          },
          "email": {
            "type": "string",
            "example": "joao.silva@example.com",
            "description": "Email do usuário"
          }
        },
        "required": [
          "otpCode",
          "email"
        ]
      },
      "RequestResetPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "joao.silva@example.com",
            "description": "Email do usuário que solicita a redefinição de senha"
          }
        },
        "required": [
          "email"
        ]
      },
      "VerifyResetCodeDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "joao.silva@example.com",
            "description": "Email do usuário"
          },
          "resetPasswordCode": {
            "type": "string",
            "example": "654321",
            "description": "Código de redefinição recebido por email"
          }
        },
        "required": [
          "email",
          "resetPasswordCode"
        ]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "joao.silva@example.com",
            "description": "Email do usuário"
          },
          "resetPasswordCode": {
            "type": "string",
            "example": "654321",
            "description": "Código de redefinição recebido por email"
          },
          "newPassword": {
            "type": "string",
            "example": "NovaSenha123@",
            "description": "Nova senha do usuário",
            "minLength": 8
          }
        },
        "required": [
          "email",
          "resetPasswordCode",
          "newPassword"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "joao.silva@example.com",
            "description": "Email do usuário"
          },
          "password": {
            "type": "string",
            "example": "senha123",
            "description": "Senha do usuário"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Token de acesso JWT"
          },
          "requires2fa": {
            "type": "boolean",
            "description": "Indica se requer verificação 2FA",
            "example": false
          },
          "tempToken": {
            "type": "string",
            "description": "Token temporário para verificação 2FA"
          }
        },
        "required": [
          "accessToken",
          "requires2fa"
        ]
      },
      "VerifyTwoFactorDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "123456",
            "description": "Código do aplicativo autenticador"
          }
        },
        "required": [
          "code"
        ]
      },
      "EnableTwoFactorDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "123456",
            "description": "Código do aplicativo autenticador"
          }
        },
        "required": [
          "code"
        ]
      },
      "CreateGameDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "League of Legends"
          },
          "colorMain": {
            "type": "string",
            "example": "#FF0000"
          },
          "colorSecondary": {
            "type": "string",
            "example": "#00FF00"
          },
          "slug": {
            "type": "string",
            "example": "lol"
          },
          "description": {
            "type": "string",
            "example": "Produtos, itens, serviços de League of Legends, somente aqui na overpowered.gg"
          },
          "topGame": {
            "type": "boolean",
            "example": true,
            "description": "Jogo em destaque"
          },
          "active": {
            "type": "boolean",
            "example": true,
            "description": "Jogo ativo, false para jogos em manuntenção ou em breve"
          },
          "newGame": {
            "type": "boolean",
            "example": true,
            "description": "Jogo novos"
          }
        },
        "required": [
          "name",
          "colorMain",
          "colorSecondary",
          "slug",
          "description",
          "topGame",
          "active",
          "newGame"
        ]
      },
      "UpdateGameDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "League of Legends"
          },
          "colorMain": {
            "type": "string",
            "example": "#FF0000"
          },
          "colorSecondary": {
            "type": "string",
            "example": "#00FF00"
          },
          "slug": {
            "type": "string",
            "example": "lol"
          },
          "description": {
            "type": "string",
            "example": "Produtos, itens, serviços de League of Legends, somente aqui na overpowered.gg"
          },
          "topGame": {
            "type": "boolean",
            "example": true,
            "description": "Jogo em destaque"
          },
          "active": {
            "type": "boolean",
            "example": true,
            "description": "Jogo ativo, false para jogos em manuntenção ou em breve"
          },
          "newGame": {
            "type": "boolean",
            "example": true,
            "description": "Jogo novos"
          }
        }
      },
      "UpdateGameImagesDto": {
        "type": "object",
        "properties": {
          "banner": {
            "type": "string",
            "format": "binary",
            "description": "Novo arquivo de banner (opcional)"
          },
          "logo": {
            "type": "string",
            "format": "binary",
            "description": "Novo arquivo de logo (opcional)"
          },
          "poster": {
            "type": "string",
            "format": "binary",
            "description": "Novo arquivo de poster (opcional)"
          }
        }
      },
      "UpdateServiceDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Elo Boost",
            "description": "Nome do serviço"
          },
          "type": {
            "type": "string",
            "enum": [
              "ELO_BOOST",
              "COACH",
              "MD5",
              "WINS",
              "ARENA"
            ],
            "example": "ELO_BOOST",
            "description": "Tipo do serviço"
          },
          "title": {
            "type": "string",
            "example": "Boost de Elo Profissional",
            "description": "Título do serviço"
          },
          "description": {
            "type": "string",
            "example": "Melhore seu ranking com nossos boosters"
          },
          "slug": {
            "type": "string",
            "example": "elo-boost",
            "description": "Slug para URL"
          },
          "basePrice": {
            "type": "number",
            "description": "Preço base do serviço"
          },
          "pricePerHour": {
            "type": "number",
            "description": "Preço por hora (para coaching)"
          },
          "pricePerWin": {
            "type": "number",
            "description": "Preço por vitória"
          },
          "pricePerTier": {
            "type": "number",
            "description": "Preço por tier (para elo boost)"
          },
          "pricePerMatch": {
            "type": "number",
            "description": "Preço por partida"
          },
          "gameId": {
            "type": "string",
            "description": "ID do jogo relacionado"
          }
        }
      },
      "Service": {
        "type": "object",
        "properties": {}
      },
      "CreateAddonDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "duo_boost",
            "description": "ID único do addon"
          },
          "name": {
            "type": "string",
            "example": "Duo Boost",
            "description": "Nome do addon"
          },
          "description": {
            "type": "string",
            "example": "Jogar junto com o booster",
            "description": "Descrição do addon"
          },
          "priceType": {
            "type": "string",
            "enum": [
              "percentage",
              "fixed"
            ],
            "description": "Tipo de preço"
          },
          "price": {
            "type": "number",
            "example": 0.3,
            "description": "Valor do addon (percentual ou fixo)"
          },
          "enabledFor": {
            "description": "Serviços que podem usar este addon",
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "enum": [
                    "ELO_BOOST",
                    "COACH",
                    "MD5",
                    "WINS",
                    "ARENA"
                  ]
                }
              },
              {
                "type": "string",
                "enum": [
                  "*"
                ]
              }
            ],
            "example": [
              "ELO_BOOST",
              "WINS"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "priceType",
          "price",
          "enabledFor"
        ]
      },
      "UpdateAddonDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "duo_boost",
            "description": "ID único do addon"
          },
          "name": {
            "type": "string",
            "example": "Duo Boost",
            "description": "Nome do addon"
          },
          "description": {
            "type": "string",
            "example": "Jogar junto com o booster",
            "description": "Descrição do addon"
          },
          "priceType": {
            "type": "string",
            "enum": [
              "percentage",
              "fixed"
            ],
            "description": "Tipo de preço"
          },
          "price": {
            "type": "number",
            "example": 0.3,
            "description": "Valor do addon (percentual ou fixo)"
          },
          "enabledFor": {
            "description": "Serviços que podem usar este addon",
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "enum": [
                    "ELO_BOOST",
                    "COACH",
                    "MD5",
                    "WINS",
                    "ARENA"
                  ]
                }
              },
              {
                "type": "string",
                "enum": [
                  "*"
                ]
              }
            ],
            "example": [
              "ELO_BOOST",
              "WINS"
            ]
          }
        }
      },
      "PreferenceOptionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "br",
            "description": "ID da opção"
          },
          "name": {
            "type": "string",
            "example": "Brasil",
            "description": "Nome da opção"
          },
          "priceModifier": {
            "type": "number",
            "example": 0,
            "description": "Modificador de preço"
          }
        },
        "required": [
          "id",
          "name",
          "priceModifier"
        ]
      },
      "CreatePreferenceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "region",
            "description": "ID da preferência"
          },
          "name": {
            "type": "string",
            "example": "Região",
            "description": "Nome da preferência"
          },
          "options": {
            "description": "Opções disponíveis",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PreferenceOptionDto"
            }
          }
        },
        "required": [
          "id",
          "name",
          "options"
        ]
      },
      "UpdatePreferenceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "region",
            "description": "ID da preferência"
          },
          "name": {
            "type": "string",
            "example": "Região",
            "description": "Nome da preferência"
          },
          "options": {
            "description": "Opções disponíveis",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PreferenceOptionDto"
            }
          }
        }
      },
      "CreateAdminDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome completo do administrador",
            "example": "João Silva"
          },
          "username": {
            "type": "string",
            "description": "Nome de usuário único para o administrador",
            "example": "joaosilva123"
          },
          "email": {
            "type": "string",
            "description": "E-mail único do administrador",
            "example": "joao.silva@example.com"
          },
          "discord": {
            "type": "string",
            "description": "ID do Discord do administrador",
            "example": "joao1234#5678"
          },
          "password": {
            "type": "string",
            "description": "Senha do administrador, usada para autenticação",
            "example": "senhaSecreta123"
          },
          "whatsapp": {
            "type": "string",
            "description": "Número de WhatsApp do administrador",
            "example": "+5511999999999"
          }
        },
        "required": [
          "name",
          "username",
          "email",
          "discord",
          "password",
          "whatsapp"
        ]
      },
      "Admin": {
        "type": "object",
        "properties": {}
      },
      "UpdateAdminDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome completo do administrador",
            "example": "João Silva"
          },
          "username": {
            "type": "string",
            "description": "Nome de usuário único para o administrador",
            "example": "joaosilva123"
          },
          "email": {
            "type": "string",
            "description": "E-mail único do administrador",
            "example": "joao.silva@example.com"
          },
          "discord": {
            "type": "string",
            "description": "ID do Discord do administrador",
            "example": "joao1234#5678"
          },
          "password": {
            "type": "string",
            "description": "Senha do administrador, usada para autenticação",
            "example": "senhaSecreta123"
          },
          "whatsapp": {
            "type": "string",
            "description": "Número de WhatsApp do administrador",
            "example": "+5511999999999"
          }
        }
      },
      "CreateNotificationDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Bem-vindo!",
            "description": "Título da notificação que será exibida ao usuário. Deve ser curto e chamativo."
          },
          "message": {
            "type": "string",
            "example": "Sua conta foi criada com sucesso.",
            "description": "Mensagem completa da notificação. Pode conter mais detalhes sobre o evento ou ação ocorrida."
          },
          "isGlobal": {
            "type": "boolean",
            "example": false,
            "description": "Indica se a notificação é geral (visível por todos os usuarios)"
          },
          "isApplication": {
            "type": "boolean",
            "example": false,
            "description": "Indica se a notificação é geral (visível por todos os administradores) ou específica para um usuário."
          },
          "userId": {
            "type": "string",
            "example": "bd0d1f52-bc69-4e4c-a2df-87eac18034f6",
            "description": "ID do usuário que receberá a notificação. Não deve ser preenchido se for uma notificação geral."
          },
          "targetRole": {
            "type": "string",
            "example": "client",
            "description": "Indica se a notificação é para usuarios com alguma permissão."
          }
        },
        "required": [
          "title",
          "message",
          "isGlobal",
          "isApplication"
        ]
      },
      "CreateBoosterDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Carlos Boost",
            "description": "Nome completo do booster. Usado para identificação interna e exibição no painel."
          },
          "username": {
            "type": "string",
            "example": "cboost123",
            "description": "Username único do booster. É usado para login e identificação no sistema."
          },
          "email": {
            "type": "string",
            "example": "carlosboost@example.com",
            "description": "Email de contato do booster. Também será utilizado como meio de autenticação."
          },
          "password": {
            "type": "string",
            "example": "supersecurepassword",
            "description": "Senha de acesso do booster. Deve conter no mínimo 6 caracteres."
          },
          "discord": {
            "type": "string",
            "example": "carlosboost#1234",
            "description": "Identificador do Discord. Pode ser usado para comunicação com clientes."
          },
          "whatsapp": {
            "type": "string",
            "example": "+5511999999999",
            "description": "Número de WhatsApp do booster. Utilizado para contato rápido e envio de notificações."
          }
        },
        "required": [
          "name",
          "username",
          "email",
          "password",
          "discord",
          "whatsapp"
        ]
      },
      "Booster": {
        "type": "object",
        "properties": {}
      },
      "UpdateBoosterUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Carlos Boost Atualizado",
            "description": "Nome atualizado do booster. Pode ser alterado a qualquer momento pelo admin."
          },
          "username": {
            "type": "string",
            "example": "cboost123new",
            "description": "Username atualizado. Deve ser único e sem espaços ou caracteres especiais."
          },
          "email": {
            "type": "string",
            "example": "boostatualizado@example.com",
            "description": "Novo email do booster. Usado para redefinição de senha e notificações."
          },
          "password": {
            "type": "string",
            "example": "novasenha123",
            "description": "Senha nova do booster. Recomenda-se o uso de senhas fortes com pelo menos 6 caracteres."
          },
          "discord": {
            "type": "string",
            "example": "carlosnew#5678",
            "description": "Discord atualizado do booster. Pode ser usado para contato em tempo real."
          },
          "whatsapp": {
            "type": "string",
            "example": "+5511988888888",
            "description": "Novo número de WhatsApp para contato do booster."
          }
        },
        "required": [
          "name",
          "username",
          "email",
          "password",
          "discord",
          "whatsapp"
        ]
      },
      "UpdateCommissionDto": {
        "type": "object",
        "properties": {
          "commissionPercentage": {
            "type": "number",
            "example": 0.2,
            "description": "Nova comissão em percentual (0.0 a 1.0). Ex: 0.2 = 20%"
          }
        },
        "required": [
          "commissionPercentage"
        ]
      },
      "PreferenceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID da preferência"
          },
          "name": {
            "type": "string",
            "description": "Nome da preferência"
          },
          "options": {
            "description": "Lista de opções disponíveis para essa preferência",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PreferenceOptionDto"
            }
          }
        },
        "required": [
          "id",
          "name",
          "options"
        ]
      },
      "AddonDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do adicional"
          },
          "name": {
            "type": "string",
            "description": "Nome do adicional"
          },
          "description": {
            "type": "string",
            "description": "Descrição do adicional"
          },
          "priceType": {
            "type": "string",
            "description": "Tipo de preço aplicado",
            "enum": [
              "percentage",
              "fixed"
            ]
          },
          "price": {
            "type": "number",
            "description": "Valor do adicional"
          },
          "enabledFor": {
            "description": "Tipos de serviços onde esse adicional está disponível ou \"*\" para todos",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "priceType",
          "price"
        ]
      },
      "RankDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do rank"
          },
          "name": {
            "type": "string",
            "description": "Nome do rank"
          },
          "tier": {
            "type": "number",
            "description": "Tier principal do rank"
          },
          "subTier": {
            "type": "number",
            "description": "Sub-nível do rank (se houver)"
          },
          "multiplier": {
            "type": "number",
            "description": "Multiplicador de preço baseado no rank"
          },
          "image": {
            "type": "string",
            "description": "URL da imagem do rank"
          },
          "mainColor": {
            "type": "string",
            "description": "Cor principal associada ao rank"
          }
        },
        "required": [
          "id",
          "name",
          "tier",
          "subTier",
          "multiplier",
          "image",
          "mainColor"
        ]
      },
      "CreateOrderDto": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "description": "ID do cliente"
          },
          "boosterId": {
            "type": "string",
            "description": "ID do booster (opcional)"
          },
          "gameId": {
            "type": "string",
            "description": "ID do jogo referente ao pedido"
          },
          "type": {
            "type": "string",
            "description": "Tipo do pedido, define o tipo de serviço adquirido",
            "enum": [
              "BOOST",
              "ACCOUNT",
              "GAMEKEY",
              "COINS",
              "LESSON",
              "SKIN",
              "ITEM"
            ]
          },
          "title": {
            "type": "string",
            "description": "Título do pedido, como referência ou identificação"
          },
          "price": {
            "type": "number",
            "description": "Preço total do pedido"
          },
          "statusProgress": {
            "type": "string",
            "description": "Status de progresso do pedido",
            "enum": [
              "PENDING",
              "IN_PROGRESS",
              "PENDING_APRO",
              "AVALIABLE",
              "COMPLETED",
              "CANCELED",
              "REFUND_REQUESTED",
              "AWAITING_APPROVAL"
            ]
          },
          "statusPayment": {
            "type": "string",
            "description": "Status de pagamento do pedido",
            "enum": [
              "PENDING",
              "PAID",
              "FAILED"
            ]
          },
          "preferences": {
            "description": "Preferências personalizadas para o pedido",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PreferenceDto"
            }
          },
          "addons": {
            "description": "Adicionais escolhidos para o pedido",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddonDto"
            }
          },
          "currentRank": {
            "description": "Rank atual do cliente",
            "allOf": [
              {
                "$ref": "#/components/schemas/RankDto"
              }
            ]
          },
          "desiredRank": {
            "description": "Rank desejado do cliente",
            "allOf": [
              {
                "$ref": "#/components/schemas/RankDto"
              }
            ]
          }
        },
        "required": [
          "clientId",
          "boosterId",
          "gameId",
          "type",
          "title",
          "price",
          "statusProgress",
          "statusPayment",
          "currentRank",
          "desiredRank"
        ]
      },
      "UpdateProgressStatusDto": {
        "type": "object",
        "properties": {
          "statusProgress": {
            "type": "string",
            "description": "Novo status de progresso",
            "enum": [
              "PENDING",
              "IN_PROGRESS",
              "PENDING_APRO",
              "AVALIABLE",
              "COMPLETED",
              "CANCELED",
              "REFUND_REQUESTED",
              "AWAITING_APPROVAL"
            ]
          }
        },
        "required": [
          "statusProgress"
        ]
      },
      "UpdatePaymentStatusDto": {
        "type": "object",
        "properties": {
          "statusPayment": {
            "type": "string",
            "description": "Novo status de pagamento",
            "enum": [
              "PENDING",
              "PAID",
              "FAILED"
            ]
          }
        },
        "required": [
          "statusPayment"
        ]
      },
      "UpdateRankDto": {
        "type": "object",
        "properties": {
          "rank": {
            "type": "object",
            "description": "Novo rank (JSON)"
          },
          "price": {
            "type": "number",
            "description": "Novo preço após alteração de rank"
          }
        },
        "required": [
          "rank",
          "price"
        ]
      },
      "UpdatePriceDto": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "description": "Novo preço do pedido"
          }
        },
        "required": [
          "price"
        ]
      },
      "UpdateBoosterDto": {
        "type": "object",
        "properties": {
          "boosterId": {
            "type": "string",
            "example": "d3b08c6a-88be-4c0a-9e24-4e1fcf25a6ad",
            "description": "ID do novo booster que será atribuído ao pedido."
          }
        },
        "required": [
          "boosterId"
        ]
      },
      "UpdateProgressDto": {
        "type": "object",
        "properties": {
          "progressPercent": {
            "type": "number",
            "example": 50,
            "description": "Percentual de progresso (0-100)"
          }
        },
        "required": [
          "progressPercent"
        ]
      },
      "RequestRefundDto": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "example": "O serviço não foi como esperado",
            "description": "Motivo do reembolso"
          }
        }
      },
      "CompleteOrderDto": {
        "type": "object",
        "properties": {
          "completionNotes": {
            "type": "string",
            "example": "Aqui estão os detalhes do serviço concluído",
            "description": "Mensagem final do booster"
          }
        }
      },
      "CreateCopywriterDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Leonardo da Vinci",
            "description": "Nome completo do escritor. Usado para identificação interna e exibição no painel."
          },
          "username": {
            "type": "string",
            "example": "leodavinci123",
            "description": "Username único do escritor. É usado para login e identificação no sistema."
          },
          "email": {
            "type": "string",
            "example": "B2i8O@example.com",
            "description": "Email de contato do escritor. Também será utilizado como meio de autenticação."
          },
          "password": {
            "type": "string",
            "example": "supersecurepassword",
            "description": "Senha de acesso do escritor. Deve conter no mínimo 6 caracteres."
          },
          "discord": {
            "type": "string",
            "example": "carlosescritor#1234",
            "description": "Identificador do Discord. Pode ser usado para comunicação com clientes."
          },
          "whatsapp": {
            "type": "string",
            "example": "+5511999999999",
            "description": "Número de WhatsApp do escritor. Utilizado para contato rápido e envio de notificações."
          }
        },
        "required": [
          "name",
          "username",
          "email",
          "password",
          "discord",
          "whatsapp"
        ]
      },
      "Copywriter": {
        "type": "object",
        "properties": {}
      },
      "UpdateCopywriterDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Leonardo da Vinci",
            "description": "Nome completo do escritor. Usado para identificação interna e exibição no painel."
          },
          "username": {
            "type": "string",
            "example": "leodavinci123",
            "description": "Username único do escritor. É usado para login e identificação no sistema."
          },
          "email": {
            "type": "string",
            "example": "B2i8O@example.com",
            "description": "Email de contato do escritor. Também será utilizado como meio de autenticação."
          },
          "password": {
            "type": "string",
            "example": "supersecurepassword",
            "description": "Senha de acesso do escritor. Deve conter no mínimo 6 caracteres."
          },
          "discord": {
            "type": "string",
            "example": "carlosescritor#1234",
            "description": "Identificador do Discord. Pode ser usado para comunicação com clientes."
          },
          "whatsapp": {
            "type": "string",
            "example": "+5511999999999",
            "description": "Número de WhatsApp do escritor. Utilizado para contato rápido e envio de notificações."
          }
        }
      },
      "CreateBlogDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Título do artigo",
            "description": "Título principal do blog com no máximo 255 caracteres."
          },
          "content": {
            "type": "string",
            "example": "Conteúdo do artigo",
            "description": "Texto principal do artigo com formatação e detalhes."
          },
          "published": {
            "type": "boolean",
            "example": true,
            "description": "Indica se o artigo já está publicado ou não."
          },
          "gameId": {
            "type": "string",
            "example": "uuid-do-jogo",
            "description": "ID do jogo relacionado ao artigo, se houver."
          },
          "href": {
            "type": "string",
            "example": "artigo-123",
            "description": "Slug para URL do artigo."
          },
          "authorId": {
            "type": "string",
            "example": "uuid-do-copywriter",
            "description": "ID do copywriter que escreveu o artigo."
          }
        },
        "required": [
          "title",
          "content",
          "published",
          "gameId",
          "href",
          "authorId"
        ]
      },
      "UpdateBlogDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Título do artigo",
            "description": "Título principal do blog com no máximo 255 caracteres."
          },
          "content": {
            "type": "string",
            "example": "Conteúdo do artigo",
            "description": "Texto principal do artigo com formatação e detalhes."
          },
          "published": {
            "type": "boolean",
            "example": true,
            "description": "Indica se o artigo já está publicado ou não."
          },
          "gameId": {
            "type": "string",
            "example": "uuid-do-jogo",
            "description": "ID do jogo relacionado ao artigo, se houver."
          },
          "href": {
            "type": "string",
            "example": "artigo-123",
            "description": "Slug para URL do artigo."
          },
          "authorId": {
            "type": "string",
            "example": "uuid-do-copywriter",
            "description": "ID do copywriter que escreveu o artigo."
          }
        }
      },
      "CreatePaymentDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "example": "1000",
            "description": "Valor em centavos. Ex: 10 dólares = 1000."
          },
          "orderId": {
            "type": "string",
            "example": "order-uuid-123",
            "description": "ID do pedido para o qual o pagamento será feito."
          },
          "clientId": {
            "type": "string",
            "example": "client-uuid-123",
            "description": "ID do cliente que está realizando o pagamento."
          },
          "provider": {
            "type": "string",
            "description": "Provedor de pagamento (Stripe, MercadoPago)",
            "enum": [
              "stripe",
              "mercadopago"
            ]
          }
        },
        "required": [
          "amount",
          "orderId",
          "clientId",
          "provider"
        ]
      },
      "CreateCouponDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "PROMO10",
            "description": "Código do cupom que será utilizado pelo cliente. Deve ser único."
          },
          "discountPercentage": {
            "type": "number",
            "example": 10,
            "description": "Porcentagem de desconto que o cupom irá aplicar no pedido."
          },
          "isPremium": {
            "type": "boolean",
            "example": true,
            "description": "Indica ser o cupom é para clientes premiums. Se verdadeiro, o cupom irá aplicar apenas para clientes premiums."
          },
          "expiresAt": {
            "type": "string",
            "example": "2025-12-31T23:59:59.000Z",
            "description": "Data de expiração do cupom."
          },
          "maxUsages": {
            "type": "number",
            "example": 100,
            "description": "Número máximo de vezes que o cupom pode ser utilizado."
          }
        },
        "required": [
          "code",
          "discountPercentage",
          "expiresAt",
          "maxUsages"
        ]
      },
      "UpdateCouponDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "PROMO10",
            "description": "Código do cupom que será utilizado pelo cliente. Deve ser único."
          },
          "discountPercentage": {
            "type": "number",
            "example": 10,
            "description": "Porcentagem de desconto que o cupom irá aplicar no pedido."
          },
          "isPremium": {
            "type": "boolean",
            "example": true,
            "description": "Indica ser o cupom é para clientes premiums. Se verdadeiro, o cupom irá aplicar apenas para clientes premiums."
          },
          "expiresAt": {
            "type": "string",
            "example": "2025-12-31T23:59:59.000Z",
            "description": "Data de expiração do cupom."
          },
          "maxUsages": {
            "type": "number",
            "example": 100,
            "description": "Número máximo de vezes que o cupom pode ser utilizado."
          }
        }
      },
      "UseCouponDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "PROMO10",
            "description": "Código do cupom a ser utilizado pelo cliente."
          },
          "userId": {
            "type": "string",
            "example": "user-uuid-123",
            "description": "ID do usuário que está tentando usar o cupom."
          }
        },
        "required": [
          "code",
          "userId"
        ]
      },
      "CreateOpCoinDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "user-123",
            "description": "ID do usuário que receberá os OpCoins.\nEsse campo é obrigatório."
          },
          "amount": {
            "type": "number",
            "example": 100,
            "description": "Quantidade de OpCoins a ser adicionada.\nValor inteiro e obrigatório."
          },
          "source": {
            "type": "string",
            "example": "Compra de pacote premium",
            "description": "Origem ou descrição da transação de OpCoins.\nValor opcional."
          }
        },
        "required": [
          "userId",
          "amount"
        ]
      },
      "UpdateOpCoinDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "user-123",
            "description": "ID do usuário que receberá os OpCoins.\nEsse campo é obrigatório."
          },
          "amount": {
            "type": "number",
            "example": 100,
            "description": "Quantidade de OpCoins a ser adicionada.\nValor inteiro e obrigatório."
          },
          "source": {
            "type": "string",
            "example": "Compra de pacote premium",
            "description": "Origem ou descrição da transação de OpCoins.\nValor opcional."
          }
        }
      },
      "UpdateAmountDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "user-uuid-123",
            "description": "ID do usuário que terá o saldo de OpCoins alterado."
          },
          "amount": {
            "type": "number",
            "example": 50,
            "description": "Valor a ser incrementado ou decrementado."
          }
        },
        "required": [
          "userId",
          "amount"
        ]
      },
      "CreateSellerDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "O nome completo que será exibido no perfil do vendedor",
            "example": "João da Silva"
          },
          "email": {
            "type": "string",
            "description": "Será utilizado para login e comunicação",
            "example": "joao@exemplo.com"
          },
          "password": {
            "type": "string",
            "description": "Senha para autenticação no sistema (mínimo 8 caracteres)",
            "example": "SenhaSegura123"
          },
          "commissionRate": {
            "type": "number",
            "description": "Percentual que o vendedor recebe por cada venda (0.00 a 1.00)",
            "example": 0.6
          },
          "pixKey": {
            "type": "string",
            "description": "Chave para recebimento via PIX (CPF/CNPJ, e-mail, telefone ou chave aleatória)",
            "example": "123.456.789-09"
          },
          "pixKeyType": {
            "type": "string",
            "description": "Tipo da chave PIX cadastrada (CPF/CNPJ, EMAIL, PHONE ou RANDOM_KEY)",
            "example": "CPF"
          },
          "document": {
            "type": "string",
            "description": "Documento oficial de identificação (somente números)",
            "example": "12345678909"
          },
          "isVerified": {
            "type": "boolean",
            "description": "Indica se o vendedor foi verificado pela equipe administrativa",
            "example": false
          },
          "status": {
            "type": "string",
            "description": "Status atual do cadastro (pending, approved, rejected)",
            "example": "pending"
          }
        },
        "required": [
          "name",
          "email",
          "password",
          "pixKey",
          "pixKeyType",
          "document"
        ]
      },
      "Seller": {
        "type": "object",
        "properties": {}
      },
      "UpdateSellerDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "O nome completo que será exibido no perfil do vendedor",
            "example": "João da Silva"
          },
          "email": {
            "type": "string",
            "description": "Será utilizado para login e comunicação",
            "example": "joao@exemplo.com"
          },
          "password": {
            "type": "string",
            "description": "Senha para autenticação no sistema (mínimo 8 caracteres)",
            "example": "SenhaSegura123"
          },
          "commissionRate": {
            "type": "number",
            "description": "Percentual que o vendedor recebe por cada venda (0.00 a 1.00)",
            "example": 0.6
          },
          "pixKey": {
            "type": "string",
            "description": "Chave para recebimento via PIX (CPF/CNPJ, e-mail, telefone ou chave aleatória)",
            "example": "123.456.789-09"
          },
          "pixKeyType": {
            "type": "string",
            "description": "Tipo da chave PIX cadastrada (CPF/CNPJ, EMAIL, PHONE ou RANDOM_KEY)",
            "example": "CPF"
          },
          "document": {
            "type": "string",
            "description": "Documento oficial de identificação (somente números)",
            "example": "12345678909"
          },
          "isVerified": {
            "type": "boolean",
            "description": "Indica se o vendedor foi verificado pela equipe administrativa",
            "example": false
          },
          "status": {
            "type": "string",
            "description": "Status atual do cadastro (pending, approved, rejected)",
            "example": "pending"
          }
        }
      },
      "DocumentUploadResponseDto": {
        "type": "object",
        "properties": {
          "documentUrl": {
            "type": "string",
            "description": "URL do documento no S3"
          },
          "status": {
            "type": "string",
            "description": "Status atual do documento",
            "example": "pending"
          }
        },
        "required": [
          "documentUrl",
          "status"
        ]
      },
      "RegisterBankDto": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "example": "BUSINESS",
            "description": "Tipo de conta (PRIVATE ou BUSINESS)"
          },
          "currency": {
            "type": "string",
            "example": "BRL",
            "description": "Moeda da conta"
          },
          "accountNumber": {
            "type": "string",
            "example": "123456789",
            "description": "Número da conta"
          },
          "bankCode": {
            "type": "string",
            "example": "ITAU",
            "description": "Código do banco"
          }
        },
        "required": [
          "accountType",
          "currency",
          "accountNumber",
          "bankCode"
        ]
      },
      "CreateTransferDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "example": 100.5,
            "description": "Valor a ser transferido"
          }
        },
        "required": [
          "amount"
        ]
      },
      "CreateBoosterApplyDto": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "example": "Player123",
            "description": "Apelido/nickname do jogador"
          },
          "firstName": {
            "type": "string",
            "example": "João",
            "description": "Primeiro nome do candidato"
          },
          "lastName": {
            "type": "string",
            "example": "Silva",
            "description": "Sobrenome do candidato"
          },
          "email": {
            "type": "string",
            "example": "joao@exemplo.com",
            "description": "E-mail para contato"
          },
          "whatsapp": {
            "type": "string",
            "example": "+5511999999999",
            "description": "Número do WhatsApp com código do país"
          },
          "discord": {
            "type": "string",
            "example": "joao#1234",
            "description": "Usuário do Discord"
          },
          "gameId": {
            "type": "string",
            "example": "123456789",
            "description": "ID da conta no jogo"
          },
          "message": {
            "type": "string",
            "example": "Tenho experiência em boost desde 2020",
            "description": "Mensagem adicional do candidato"
          }
        },
        "required": [
          "nickname",
          "firstName",
          "lastName",
          "email",
          "whatsapp",
          "discord",
          "gameId"
        ]
      },
      "Apply": {
        "type": "object",
        "properties": {}
      },
      "CreateSellerApplyDto": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "example": "VendedorTop",
            "description": "Apelido/nickname do vendedor"
          },
          "firstName": {
            "type": "string",
            "example": "Maria",
            "description": "Primeiro nome do candidato"
          },
          "lastName": {
            "type": "string",
            "example": "Santos",
            "description": "Sobrenome do candidato"
          },
          "email": {
            "type": "string",
            "example": "maria@exemplo.com",
            "description": "E-mail para contato"
          },
          "whatsapp": {
            "type": "string",
            "example": "+5511888888888",
            "description": "Número do WhatsApp com código do país"
          },
          "discord": {
            "type": "string",
            "example": "maria#5678",
            "description": "Usuário do Discord"
          },
          "annualRevenue": {
            "type": "string",
            "example": "R$ 50.000,00",
            "description": "Faturamento anual aproximado"
          },
          "marketplaceExperience": {
            "type": "string",
            "example": "Mercado Livre, Shopee",
            "description": "Marketplaces onde já atua como vendedor"
          },
          "message": {
            "type": "string",
            "example": "Tenho estoque de 500 itens",
            "description": "Mensagem adicional do candidato"
          }
        },
        "required": [
          "nickname",
          "firstName",
          "lastName",
          "email",
          "whatsapp",
          "discord",
          "annualRevenue"
        ]
      },
      "CreateFeedbackDto": {
        "type": "object",
        "properties": {
          "targetType": {
            "type": "string",
            "enum": [
              "booster",
              "seller"
            ],
            "example": "booster",
            "description": "Tipo do destinatário do feedback (booster ou seller)"
          },
          "targetId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID do booster ou seller que receberá o feedback"
          },
          "orderId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID do pedido relacionado ao feedback"
          },
          "message": {
            "type": "string",
            "example": "Ótimo serviço, muito profissional!",
            "description": "Mensagem de feedback"
          },
          "rating": {
            "type": "number",
            "example": 4.5,
            "description": "Avaliação de 0 a 5",
            "minimum": 0,
            "maximum": 5
          }
        },
        "required": [
          "targetType",
          "targetId",
          "orderId",
          "message",
          "rating"
        ]
      },
      "FeedbackResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID do feedback"
          },
          "targetType": {
            "type": "string",
            "example": "booster",
            "description": "Tipo do destinatário"
          },
          "targetId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "description": "ID do destinatário"
          },
          "message": {
            "type": "string",
            "example": "Ótimo serviço!",
            "description": "Mensagem do feedback"
          },
          "rating": {
            "type": "number",
            "example": 4.5,
            "description": "Nota de avaliação"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01T00:00:00.000Z",
            "description": "Data de criação"
          }
        },
        "required": [
          "id",
          "targetType",
          "targetId",
          "message",
          "rating",
          "createdAt"
        ]
      },
      "TrustpilotReviewDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "5a020e2e4a6f410001f6d6e2",
            "description": "ID da review"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-01-01T00:00:00.000Z",
            "description": "Data de criação"
          },
          "stars": {
            "type": "number",
            "example": 5,
            "description": "Avaliação em estrelas (1-5)"
          },
          "message": {
            "type": "string",
            "example": "Ótimo serviço!",
            "description": "Mensagem da review"
          },
          "author": {
            "type": "string",
            "example": "João S.",
            "description": "Nome do autor"
          }
        },
        "required": [
          "id",
          "createdAt",
          "stars",
          "author"
        ]
      },
      "TrustpilotResponseDto": {
        "type": "object",
        "properties": {
          "reviews": {
            "description": "Lista de reviews",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrustpilotReviewDto"
            }
          },
          "averageRating": {
            "type": "number",
            "example": 4.7,
            "description": "Média de avaliações"
          },
          "totalReviews": {
            "type": "number",
            "example": 150,
            "description": "Total de reviews"
          }
        },
        "required": [
          "reviews",
          "averageRating",
          "totalReviews"
        ]
      },
      "SendEmailDto": {
        "type": "object",
        "properties": {
          "to": {
            "type": "string",
            "example": "user@example.com",
            "description": "Endereço de e-mail do destinatário"
          },
          "from": {
            "type": "string",
            "example": "no-reply@seusite.com",
            "description": "Endereço de e-mail do remetente"
          },
          "subject": {
            "type": "string",
            "example": "Bem-vindo à nossa plataforma!",
            "description": "Assunto do e-mail"
          },
          "template": {
            "type": "string",
            "example": "welcome",
            "description": "Nome do template a ser utilizado"
          },
          "data": {
            "type": "object",
            "example": {
              "name": "John Doe",
              "age": 30
            },
            "description": "Dados adicionais para o template"
          }
        },
        "required": [
          "to",
          "from",
          "subject"
        ]
      },
      "SendDiscordMessageDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "123456789012345678",
            "description": "ID do usuário no Discord"
          },
          "message": {
            "type": "string",
            "example": "Olá! Seu pedido foi aprovado!",
            "description": "Mensagem a ser enviada"
          },
          "embed": {
            "type": "object",
            "example": "{\"title\": \"Notificação importante\"}",
            "description": "Embed opcional (em formato JSON)"
          }
        },
        "required": [
          "userId",
          "message"
        ]
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Pacote de Diamantes - 1000 unidades",
            "description": "Título do produto"
          },
          "coverImage": {
            "type": "string",
            "example": "https://example.com/image.jpg",
            "description": "URL da imagem de capa"
          },
          "platform": {
            "type": "string",
            "example": "pc",
            "description": "Plataforma do jogo (pc, ps5, xbox, etc.)"
          },
          "gameId": {
            "type": "string",
            "example": "123456789",
            "description": "ID específico do jogo (opcional)"
          },
          "stock": {
            "type": "number",
            "example": 100,
            "description": "Quantidade em estoque"
          },
          "autoDelivery": {
            "type": "boolean",
            "example": true,
            "description": "Se o produto é entregue automaticamente"
          },
          "deliveryTime": {
            "type": "number",
            "example": 15,
            "description": "Tempo estimado de entrega em minutos (opcional)"
          },
          "description": {
            "type": "string",
            "example": "Pacote com 1000 diamantes para seu personagem",
            "description": "Descrição detalhada do produto"
          },
          "price": {
            "type": "number",
            "example": 29.99,
            "description": "Preço do produto"
          },
          "items": {
            "example": [
              "conta1@email.com:senha123",
              "conta2@email.com:senha456",
              "apikey-12354121-123123123-123123123"
            ],
            "description": "Array de itens/contas do produto",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "filterValues": {
            "type": "object",
            "example": {
              "server": "americas",
              "type": "currency"
            },
            "description": "Valores dos filtros do jogo"
          }
        },
        "required": [
          "title",
          "coverImage",
          "platform",
          "stock",
          "autoDelivery",
          "description",
          "price",
          "items"
        ]
      },
      "Product": {
        "type": "object",
        "properties": {}
      },
      "UpdateProductDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Pacote de Diamantes - 2000 unidades",
            "description": "Novo título do produto"
          },
          "coverImage": {
            "type": "string",
            "example": "https://example.com/new-image.jpg",
            "description": "Nova URL da imagem de capa"
          },
          "platform": {
            "type": "string",
            "example": "ps5",
            "description": "Nova plataforma do jogo"
          },
          "gameId": {
            "type": "string",
            "example": "987654321",
            "description": "Novo ID específico do jogo"
          },
          "autoDelivery": {
            "type": "boolean",
            "example": false,
            "description": "Atualizar entrega automática"
          },
          "deliveryTime": {
            "type": "number",
            "example": 30,
            "description": "Novo tempo estimado de entrega em minutos"
          },
          "description": {
            "type": "string",
            "example": "Pacote com 2000 diamantes para seu personagem",
            "description": "Nova descrição do produto"
          },
          "isActive": {
            "type": "boolean",
            "example": true,
            "description": "Status ativo/inativo do produto"
          }
        }
      },
      "UpdatePriceProductDto": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "example": 39.99,
            "description": "Novo preço do produto"
          }
        },
        "required": [
          "price"
        ]
      },
      "UpdateStockDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "example": 50,
            "description": "Quantidade a ser adicionada/removida do estoque (valor negativo para remover)"
          }
        },
        "required": [
          "amount"
        ]
      },
      "AddItemsDto": {
        "type": "object",
        "properties": {
          "items": {
            "example": [
              "conta4@email.com:senha012"
            ],
            "description": "Itens a serem adicionados ao produto",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "RemoveItemDto": {
        "type": "object",
        "properties": {
          "item": {
            "type": "string",
            "example": "conta1@email.com:senha123",
            "description": "Item específico a ser removido"
          }
        },
        "required": [
          "item"
        ]
      },
      "UpdateItemsDto": {
        "type": "object",
        "properties": {
          "items": {
            "example": [
              "conta3@email.com:senha789"
            ],
            "description": "Novos itens a serem adicionados",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "ExportAnalyticsDto": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "enum": [
              "pdf",
              "csv",
              "excel"
            ],
            "default": "pdf"
          }
        },
        "required": [
          "format"
        ]
      }
    }
  }
}